def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply from: 'versions.gradle'

def keystoreProperties = new Properties()
   def keystorePropertiesFile = rootProject.file('key.properties');
    print(keystorePropertiesFile)
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    
//    splits {
//        abi {
//         enable true
//         reset()
//         include "x86", "x86_64", "armeabi", "armeabi-v7a", "arm64-v8a"
//         universalApk false
//       }
//    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.rw.fixa"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode VERSION_CODE.toInteger()
        versionName VERSION_NAME
    }

    signingConfigs {
        release {
            //From decoded key
            //storeFile = file('key.jks')

            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        output.versionCodeOverride = 83
    }
}

android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        output.versionNameOverride = "v1.0"
    }
}

android.applicationVariants.all { variant ->
  versions.apply(variant)
}
